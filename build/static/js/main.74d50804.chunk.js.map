{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/MovieControls.js","components/MovieCard3D.js","components/Watchlist.js","components/Add.js","components/Watched.js","App.js","serviceWorker.js","index.js"],"names":["Header","useState","localStorage","getItem","theme","setTheme","useEffect","document","documentElement","setAttribute","setItem","className","onClick","prev","exact","to","activeClassName","AppReducer","state","action","type","watchlist","payload","filter","movie","id","startIndex","endIndex","newWatchlist","Array","from","splice","moved","JSON","stringify","movieToAdd","watched","movieToMove","initialState","title","poster_path","release_date","parse","GlobalContext","createContext","reorderWatchlist","GlobalProvider","props","useReducer","dispatch","Provider","value","children","MovieControls","useContext","removeMovieFromWatchlist","addMovieToWatched","moveToWatchlist","removeFromWatched","motion","button","toast","success","whileHover","scale","whileTap","transition","stiffness","damping","info","MovieCard3D","src","alt","style","backgroundImage","slice","Watchlist","length","onDragEnd","result","source","destination","index","droppableId","provided","ref","innerRef","droppableProps","map","key","toString","draggableId","prov","draggableProps","dragHandleProps","placeholder","Add","Watched","AnimatedRoutes","location","useLocation","AnimatePresence","exitBeforeEnter","div","pathname","initial","opacity","y","animate","exit","duration","path","component","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","pauseOnHover","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.74d50804.chunk.js","sourcesContent":["// src/components/Header.js\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Header = () => {\n  // 1) Тема из localStorage или light по умолчанию\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"light\");\n\n  // 2) При каждом изменении темы — пишем в <html> и в localStorage\n  useEffect(() => {\n    document.documentElement.setAttribute(\"data-theme\", theme);\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  // 3) Переключатель темы\n  const toggleTheme = () => {\n    setTheme((prev) => (prev === \"light\" ? \"dark\" : \"light\"));\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-container container\">\n        <div className=\"navbar-left\">\n          <h1 className=\"navbar-logo\">MyMovies</h1>\n          <button className=\"theme-toggle\" onClick={toggleTheme}>\n            <i className={`fas fa-${theme === \"dark\" ? \"sun\" : \"moon\"}`}></i>\n          </button>\n        </div>\n        <ul className=\"nav-links\">\n          <li className=\"nav-item\">\n            <NavLink exact to=\"/\" className=\"nav-link\" activeClassName=\"active\">\n              Watchlist\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink to=\"/add\" className=\"nav-link\" activeClassName=\"active\">\n              Add\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/watched\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n            >\n              Watched\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n","// src/context/AppReducer.js\n\nexport default function AppReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_MOVIE_TO_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: [action.payload, ...state.watchlist],\n      };\n\n    case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload\n        ),\n      };\n\n    case \"REORDER_WATCHLIST\": {\n      const { startIndex, endIndex } = action.payload;\n      const newWatchlist = Array.from(state.watchlist);\n      const [moved] = newWatchlist.splice(startIndex, 1);\n      newWatchlist.splice(endIndex, 0, moved);\n      localStorage.setItem(\"watchlist\", JSON.stringify(newWatchlist));\n      return {\n        ...state,\n        watchlist: newWatchlist,\n      };\n    }\n\n    case \"ADD_MOVIE_TO_WATCHED\": {\n      const movieToAdd = action.payload;\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== movieToAdd.id\n        ),\n        watched: [movieToAdd, ...state.watched],\n      };\n    }\n\n    case \"MOVE_TO_WATCHLIST\": {\n      const movieToMove = action.payload;\n      return {\n        ...state,\n        watched: state.watched.filter((movie) => movie.id !== movieToMove.id),\n        watchlist: [movieToMove, ...state.watchlist],\n      };\n    }\n\n    case \"REMOVE_FROM_WATCHED\":\n      return {\n        ...state,\n        watched: state.watched.filter((movie) => movie.id !== action.payload),\n      };\n\n    default:\n      return state;\n  }\n}\n","// src/context/GlobalState.js\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// initial state\nconst initialState = {\n  watchlist: [\n    {\n      id: 278,\n      title: \"The Shawshank Redemption\",\n      poster_path: \"/q6y0Go1tsGEsmtFryDOJo3dEmqu.jpg\",\n      release_date: \"1994-09-23\",\n    },\n    {\n      id: 238,\n      title: \"The Godfather\",\n      poster_path: \"/3bhkrj58Vtu7enYsRolD1fZdja1.jpg\",\n      release_date: \"1972-03-14\",\n    },\n  ],\n  watched: localStorage.getItem(\"watched\")\n    ? JSON.parse(localStorage.getItem(\"watched\"))\n    : [],\n};\n\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// action creator for reordering watchlist\nexport const reorderWatchlist = (startIndex, endIndex) => ({\n  type: \"REORDER_WATCHLIST\",\n  payload: { startIndex, endIndex },\n});\n\n// provider component\nexport const GlobalProvider = (props) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // persist to localStorage on state change\n  useEffect(() => {\n    localStorage.setItem(\"watchlist\", JSON.stringify(state.watchlist));\n    localStorage.setItem(\"watched\", JSON.stringify(state.watched));\n  }, [state]);\n\n  // actions\n  const addMovieToWatchlist = (movie) => {\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\n  };\n\n  const removeMovieFromWatchlist = (id) => {\n    dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id });\n  };\n\n  const addMovieToWatched = (movie) => {\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHED\", payload: movie });\n  };\n\n  const moveToWatchlist = (movie) => {\n    dispatch({ type: \"MOVE_TO_WATCHLIST\", payload: movie });\n  };\n\n  const removeFromWatched = (id) => {\n    dispatch({ type: \"REMOVE_FROM_WATCHED\", payload: id });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        dispatch,\n        watchlist: state.watchlist,\n        watched: state.watched,\n        dispatch, // ← добавлен dispatch для dnd\n        addMovieToWatchlist,\n        removeMovieFromWatchlist,\n        addMovieToWatched,\n        moveToWatchlist,\n        removeFromWatched,\n        reorderWatchlist, // ← экпортируем action creator\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n","// src/components/MovieControls.js\nimport React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n// — добавлен импорт motion для анимаций\nimport { motion } from \"framer-motion\";\nimport { toast } from \"react-toastify\";\n\nexport const MovieControls = ({ movie, type }) => {\n  const {\n    removeMovieFromWatchlist,\n    addMovieToWatched,\n    moveToWatchlist,\n    removeFromWatched,\n  } = useContext(GlobalContext);\n\n  return (\n    <div className=\"inner-card-controls\">\n      {type === \"watchlist\" && (\n        <>\n          {/* — motion.button вместо обычной кнопки, hover и tap эффекты */}\n          <motion.button\n            className=\"ctrl-btn\"\n            onClick={() => {\n              addMovieToWatched(movie);\n              toast.success(`${movie.title} added to Watched!`);\n            }}\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n          >\n            <i className=\"fa-fw far fa-eye\"></i>\n          </motion.button>\n\n          <motion.button\n            className=\"ctrl-btn\"\n            onClick={() => {\n              removeMovieFromWatchlist(movie.id);\n              toast.info(`${movie.title} removed from Watchlist`);\n            }}\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n          >\n            <i className=\"fa-fw fa fa-times\"></i>\n          </motion.button>\n        </>\n      )}\n\n      {type === \"watched\" && (\n        <>\n          <motion.button\n            className=\"ctrl-btn\"\n            onClick={() => {\n              moveToWatchlist(movie);\n              toast.success(`${movie.title} moved back to Watchlist`);\n            }}\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n          >\n            <i className=\"fa-fw far fa-eye-slash\"></i>\n          </motion.button>\n\n          <motion.button\n            className=\"ctrl-btn\"\n            onClick={() => {\n              removeFromWatched(movie.id);\n              toast.info(`${movie.title} removed from Watched`);\n            }}\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n          >\n            <i className=\"fa-fw fa fa-times\"></i>\n          </motion.button>\n        </>\n      )}\n    </div>\n  );\n};\n","// src/components/MovieCard3D.js\r\nimport React from \"react\";\r\nimport { MovieControls } from \"./MovieControls\";\r\nimport \"./MovieCard3D.css\";\r\n\r\nexport const MovieCard3D = ({ movie, type = \"watchlist\" }) => (\r\n  <div className=\"card-3d\">\r\n    <div className=\"card-inner\">\r\n      {/* передняя сторона */}\r\n      <div className=\"card-face card-front\">\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\r\n          alt={movie.title}\r\n        />\r\n      </div>\r\n\r\n      {/* тыльная сторона */}\r\n      <div className=\"card-face card-back\">\r\n        {/* 1) отражение */}\r\n        <div\r\n          className=\"card-reflection\"\r\n          style={{\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/w300${movie.poster_path})`,\r\n          }}\r\n        />\r\n\r\n        {/* 2) основной контент поверх отражения */}\r\n        <div className=\"card-back-content\">\r\n          <h4 className=\"card-back-title\">{movie.title}</h4>\r\n          <p className=\"card-back-year\">{movie.release_date?.slice(0, 4)}</p>\r\n          <div className=\"card-back-controls\">\r\n            <MovieControls movie={movie} type={type} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","// src/components/Watchlist.js\nimport React, { useContext } from \"react\";\nimport { GlobalContext, reorderWatchlist } from \"../context/GlobalState\";\nimport { MovieCard3D } from \"./MovieCard3D\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nexport const Watchlist = () => {\n  const { watchlist, dispatch } = useContext(GlobalContext);\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) return;\n    if (\n      source.index === destination.index &&\n      source.droppableId === destination.droppableId\n    ) {\n      return;\n    }\n    dispatch(reorderWatchlist(source.index, destination.index));\n  };\n\n  return (\n    <div className=\"movie-page\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1 className=\"heading\">My Watchlist</h1>\n          <span className=\"count-pill\">\n            {watchlist.length} {watchlist.length === 1 ? \"Movie\" : \"Movies\"}\n          </span>\n        </div>\n\n        {watchlist.length > 0 ? (\n          <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"watchlist\">\n              {(provided) => (\n                <div\n                  className=\"movie-grid\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  {watchlist.map((movie, index) => (\n                    <Draggable\n                      key={movie.id.toString()}\n                      draggableId={movie.id.toString()}\n                      index={index}\n                    >\n                      {(prov) => (\n                        <div\n                          ref={prov.innerRef}\n                          {...prov.draggableProps}\n                          {...prov.dragHandleProps}\n                        >\n                          <MovieCard3D movie={movie} type=\"watchlist\" />\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        ) : (\n          <h2 className=\"no-movies\">No movies in your list! Add some!</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n","// src/components/Add.js\nimport React, { useState } from \"react\";\nimport { ResultCard } from \"./ResultCard\";\n// — добавлен импорт motion для анимации появления страницы\nimport { motion } from \"framer-motion\";\n\n// Skeleton-заглушка для показа при загрузке\nconst SkeletonCard = () => (\n  <div className=\"skeleton-card\">\n    <div className=\"skeleton-poster\"></div>\n    <div className=\"skeleton-text-line short\"></div>\n    <div className=\"skeleton-text-line long\"></div>\n  </div>\n);\n\nexport const Add = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const onChange = (e) => {\n    e.preventDefault();\n    const value = e.target.value;\n    setQuery(value);\n    setLoading(true);\n\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${\n        process.env.REACT_APP_TMDB_KEY\n      }&language=en-US&page=1&include_adult=false&query=${encodeURIComponent(\n        value\n      )}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setResults(Array.isArray(data.results) ? data.results : []);\n        setLoading(false);\n      })\n      .catch(() => {\n        setResults([]);\n        setLoading(false);\n      });\n  };\n\n  return (\n    // — обернули всю страницу в motion.div с initial/animate/exit для плавного появления\n    <motion.div\n      className=\"add-page\"\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -20 }}\n      transition={{ duration: 0.4 }}\n    >\n      {/* Hero Banner с поиском */}\n      <section className=\"search-hero\">\n        <div className=\"search-hero-bg\" />\n        <div className=\"search-hero-content container\">\n          <h2 className=\"search-hero-title\">Find Your Next Movie</h2>\n          <div className=\"search-box\">\n            <motion.i\n              className=\"fas fa-search search-icon\"\n              // — легкий эффект при наведении на иконку\n              whileHover={{ scale: 1.2 }}\n              transition={{ duration: 0.2 }}\n            />\n            <input\n              className=\"search-input\"\n              type=\"text\"\n              placeholder=\"Search for a movie\"\n              value={query}\n              onChange={onChange}\n            />\n          </div>\n        </div>\n      </section>\n\n      {/* Результаты или Skeleton */}\n      <div className=\"container\">\n        {loading ? (\n          <div className=\"movie-grid\">\n            {Array.from({ length: 8 }).map((_, i) => (\n              <SkeletonCard key={i} />\n            ))}\n          </div>\n        ) : Array.isArray(results) && results.length > 0 ? (\n          <ul className=\"results movie-grid\">\n            {results.map((movie) => (\n              <li key={movie.id}>\n                <ResultCard movie={movie} />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          query && <h2 className=\"no-movies\">No movies found!</h2>\n        )}\n      </div>\n    </motion.div>\n  );\n};\n","// src/components/Watched.js\nimport React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n// теперь импортируем 3D-карточку вместо MovieCard\nimport { MovieCard3D } from \"./MovieCard3D\";\n\nexport const Watched = () => {\n  const { watched } = useContext(GlobalContext);\n\n  return (\n    <div className=\"movie-page\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1 className=\"heading\">Watched Movies</h1>\n          <span className=\"count-pill\">\n            {watched.length} {watched.length === 1 ? \"Movie\" : \"Movies\"}\n          </span>\n        </div>\n\n        {watched.length > 0 ? (\n          <div className=\"movie-grid\">\n            {watched.map((movie) => (\n              <MovieCard3D movie={movie} key={movie.id} type=\"watched\" />\n            ))}\n          </div>\n        ) : (\n          <h2 className=\"no-movies\">No movies in your list! Add some!</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n","// src/App.js\nimport React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  useLocation,\n} from \"react-router-dom\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { Header } from \"./components/Header\";\nimport { Watchlist } from \"./components/Watchlist\";\nimport { Add } from \"./components/Add\";\nimport { Watched } from \"./components/Watched\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nimport \"./styles.css\";\nimport \"./lib/font-awesome/css/all.min.css\";\n\nfunction AnimatedRoutes() {\n  const location = useLocation();\n\n  return (\n    <AnimatePresence exitBeforeEnter>\n      {/* motion.div — ПРЯМОЙ потомок AnimatePresence */}\n      <motion.div\n        key={location.pathname} // ключ по пути\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -10 }}\n        transition={{ duration: 0.3 }}\n      >\n        {/* внутри — привычный Switch/Route */}\n        <Switch location={location}>\n          <Route exact path=\"/\" component={Watchlist} />\n          <Route path=\"/add\" component={Add} />\n          <Route path=\"/watched\" component={Watched} />\n        </Switch>\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Router>\n        <Header />\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          pauseOnHover\n        />\n        <AnimatedRoutes />\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n\n","import \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}